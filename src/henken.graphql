type Henken implements Node & UserActivityEvent {
  id: ID!

  createdAt: DateTime!
  updatedAt: DateTime!

  postedBy: User!
  postsTo: User!

  content: Content!

  comment: String!

  answer: Answer
}

type HenkenEdge implements Edge {
  edge: String!
  node: Henken!
}

type HenkenConnection implements Connection {
  edges: [HenkenEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input HenkenOrder {
  order: OrderDirection!
  field: HenkenOrderField!
}

enum HenkenOrderField {
  CREATED_AT
  UPDATED_AT
}

extend type Query {
  henken(id: ID!): Henken!
  findHenken(id: ID!): FindHenkenPayload!

  manyHenkens(limit: Int!): [Henken!]!
}

type FindHenkenPayload {
  henken: Henken
}

extend type Mutation {
  createHenken(
    postsTo: ID!
    contentType: ContentType!
    contentId: ID!
    data: CreateHenkenData!
  ): CreateHenkenPayload!
}

input CreateHenkenData {
  comment: String
}

type CreateHenkenPayload {
  henken: Henken!
}
