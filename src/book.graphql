type Book implements Node {
  id: ID!

  title: String!

  isbn: String
  cover: String

  authors: [Author!]!
}

type BookEdge implements Edge {
  edge: String!
  node: Book!
}

type BookConnection implements Connection {
  edges: [BookEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type BookSeries implements Node {
  id: ID!

  title: String!

  books: BookConnection!
}

type BookSeriesEdge implements Edge {
  edge: String!
  node: BookSeries!
}

type BookSeriesConnection implements Connection {
  edges: [BookSeriesEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

extend type Query {
  book(id: ID!): Book!
  findBook(id: ID!): FindBookPayload!

  bookSeries(id: ID!): BookSeries!
  findBookSeries(id: ID!): FindBookSeriesPayload!
}

type FindBookPayload {
  book: Book!
}

type FindBookSeriesPayload {
  series: BookSeries
}
